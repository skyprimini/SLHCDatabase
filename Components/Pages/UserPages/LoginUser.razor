@page "/LoginUser"
@using Microsoft.EntityFrameworkCore
@using DogAdoptionWebsite.Models
@inject NavigationManager NavigationManager
<style>
    /* Page Header Styling */
    h1 {
        font-size: 32px;
        text-align: center;
        color: #b5651d; /* Brick color */
        font-family: 'Georgia', serif;
        margin-top: 20px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* Login Form Container */
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 80vh;
        background-color: #fdf6e3; /* Pastel yellow background */
        padding: 20px;
    }

    /* Form Styling */
    .login-form {
        width: 100%;
        max-width: 500px;
        background-color: #ffffff;
        border: 2px solid #6b8e23; /* Olive border */
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 30px;
    }

    .form-floating {
        margin-bottom: 20px;
    }

        .form-floating label {
            color: #333333; /* Dark gray text */
        }

    .form-control, .form-select {
        border: 1px solid #6b8e23; /* Olive border */
        border-radius: 5px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
    }

        .form-control:focus, .form-select:focus {
            border-color: #b5651d; /* Brick color focus */
            box-shadow: 0 0 5px rgba(181, 101, 29, 0.5);
        }

    .btn-primary {
        background-color: #b5651d; /* Brick color */
        border-color: #b5651d;
        font-size: 18px;
        font-weight: bold;
        padding: 10px;
        border-radius: 5px;
        width: 100%;
    }

        .btn-primary:hover {
            background-color: #6b8e23; /* Olive hover */
            border-color: #6b8e23;
        }

    .text-danger {
        font-size: 14px;
        color: #ff4d4f; /* Highlighted red for validation errors */
    }
</style>

<PageTitle>Login</PageTitle>

<hr />
<div class="login-container">
    <div class="login-form">
        <EditForm method="post" Model="User" OnValidSubmit="LoginUsers" FormName="login" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <div class="form-floating">
                <label for="email">Email:</label>
                <InputText id="email" @bind-Value="User.Email" class="form-control" aria-required="true" />
                <ValidationMessage For="() => User.Email" class="text-danger" />
            </div>

            <div class="form-floating">
                <label for="password">Password:</label>
                <InputText id="password" @bind-Value="User.Password" class="form-control" aria-required="true" />
                <ValidationMessage For="() => User.Password" class="text-danger" />
            </div>

            <div class="form-floating">
            <label for="role">Select Role:</label>
            <InputSelect id="role" @bind-Value="SelectedRole" class="form-control" aria-required="true">
            <option value="" disabled>Select a Role</option>
            <option value="Admin">Admin</option>
            <option value="User">User</option>
            </InputSelect>
             <ValidationMessage For="() => SelectedRole" class="text-danger" />
</div>

            <button type="submit" class="btn btn-primary">Login</button>
        </EditForm>
    </div>
</div> <!---->
@code {
    public string SelectedRole { get; set; } = string.Empty;
    [SupplyParameterFromForm]
    public User User { get; set; } = new();

    // Simulate login regardless of database
    private async Task LoginUsers()
    {
 

        // Log in any user regardless of database check
        NavigationManager.NavigateTo("/home"); // Redirect to the home page or dashboard
    }
}
